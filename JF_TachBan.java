/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.SalesGroup;

import DAO.Ban_DAO;
import DAO.ChiTietHoaDon_DAO;
import DAO.HoaDon_DAO;
import GUI.Fr_Login;
import POJO.Ban;
import POJO.ChiTietHoaDon;
import POJO.HoaDon;
import java.awt.Font;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Admin
 */
public class JF_TachBan extends javax.swing.JFrame {

    private Ban ban;
    private HoaDon hoaDon;
    private HoaDon hoaDon2;
    private ArrayList<ChiTietHoaDon> listBan1 = new ArrayList<>();
    private ArrayList<ChiTietHoaDon> listBan2 = new ArrayList<>();
    boolean changed = false;
    private final ArrayList<ChiTietHoaDon> listTam;

    /**
     * Creates new form JF_TachBan
     */
    private void load_Form() {
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        txt_Ban.setText(String.valueOf(ban.getSoBan()));
    }

    private void load_cboBan() {
        Vector<Ban> comboData = new Vector<>();
        ArrayList<Ban> list = Ban_DAO.layDanhSach();
        list.remove(0);
        list.remove(ban.getSoBan() - 1);

        for (Ban ban : list) {
            comboData.add(ban);
        }
        cbo_Ban.setModel(new DefaultComboBoxModel<>(comboData));
        cbo_Ban.setSelectedIndex(0);
    }

    private void load_Table(JTable table, ArrayList<ChiTietHoaDon> list) {
        String[] tieuDe = {"Tên sản phẩm", "Số lượng", "Giá", "Tổng tiền"};
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.setColumnIdentifiers(tieuDe);
        dtm.setRowCount(0);

        for (ChiTietHoaDon e : list) {
            try {
                Vector v = new Vector();
                v.add(e.getTenSanPham());
                v.add(e.getSoLuong());
                v.add(e.getGiaSanPham());
                v.add(e.getTongTien());
                dtm.addRow(v);
            } catch (SQLException ex) {
                System.err.println("Error: " + ex.getMessage());
            }
        }
        table.setModel(dtm);

        table.setFont(new Font("Tahoma", Font.PLAIN, 16));
        table.getTableHeader().setFont(new Font("Tahoma", Font.PLAIN, 16));
        table.getColumnModel().getColumn(0).setPreferredWidth((int) (table.getWidth() * 0.7));

        TableColumnModel columnModel = table.getColumnModel();
        columnModel.removeColumn(table.getColumn("Giá"));
        columnModel.removeColumn(table.getColumn("Tổng tiền"));

    }

    public JF_TachBan(Ban ban) {
        this.ban = ban;
        hoaDon = HoaDon_DAO.layHoaDonCuaBanDangSuDung(ban.getSoBan());
        initComponents();
        load_Form();

        listBan1 = ChiTietHoaDon_DAO.layDanhSach(hoaDon.getMaHoaDon());
        listTam = new ArrayList<>(listBan1);
        load_Table(tbl_Ban1, listBan1);
        load_Table(tbl_Ban2, listBan2);
        load_cboBan();
        Ban ban2 = (Ban) cbo_Ban.getItemAt(0);
        if (ban2.getTrangThai()) {
            hoaDon2 = HoaDon_DAO.layHoaDonCuaBanDangSuDung(ban2.getSoBan());
            listBan2 = ChiTietHoaDon_DAO.layDanhSach(
                    HoaDon_DAO.layHoaDonCuaBanDangSuDung(
                            ban2.getSoBan()).getMaHoaDon());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        cbo_Ban = new javax.swing.JComboBox<>();
        txt_Ban = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btn_RightAll = new javax.swing.JButton();
        btn_Right = new javax.swing.JButton();
        btn_Left = new javax.swing.JButton();
        btn_LeftAll = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_Ban1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_Ban2 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        btn_XacNhan = new Assets.Custom_Item.ButtonRound();
        btn_Thoat = new Assets.Custom_Item.ButtonRound();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(222, 184, 135));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(222, 184, 135));
        jPanel6.setForeground(new java.awt.Color(222, 184, 135));

        jPanel1.setBackground(new java.awt.Color(222, 184, 135));

        cbo_Ban.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbo_Ban.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_BanActionPerformed(evt);
            }
        });

        txt_Ban.setEditable(false);
        txt_Ban.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txt_Ban.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_Ban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150)
                .addComponent(cbo_Ban, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbo_Ban, txt_Ban});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbo_Ban, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Ban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cbo_Ban, txt_Ban});

        jPanel5.setBackground(new java.awt.Color(222, 184, 135));

        btn_RightAll.setBackground(new java.awt.Color(138, 91, 43));
        btn_RightAll.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        btn_RightAll.setText(">>");
        btn_RightAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RightAllActionPerformed(evt);
            }
        });

        btn_Right.setBackground(new java.awt.Color(138, 91, 43));
        btn_Right.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        btn_Right.setText(">");
        btn_Right.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RightActionPerformed(evt);
            }
        });

        btn_Left.setBackground(new java.awt.Color(138, 91, 43));
        btn_Left.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        btn_Left.setText("<");
        btn_Left.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LeftActionPerformed(evt);
            }
        });

        btn_LeftAll.setBackground(new java.awt.Color(138, 91, 43));
        btn_LeftAll.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        btn_LeftAll.setText("<<");
        btn_LeftAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LeftAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn_Left, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btn_LeftAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btn_RightAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btn_Right, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(btn_RightAll, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_Right, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(btn_Left, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_LeftAll, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(138, 91, 43));
        jPanel2.setPreferredSize(new java.awt.Dimension(259, 256));

        tbl_Ban1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbl_Ban1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(138, 91, 43));
        jPanel3.setPreferredSize(new java.awt.Dimension(259, 0));

        tbl_Ban2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbl_Ban2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(222, 184, 135));

        btn_XacNhan.setForeground(new java.awt.Color(255, 255, 255));
        btn_XacNhan.setText("Xác nhận");
        btn_XacNhan.setBorderColor(new java.awt.Color(255, 255, 255));
        btn_XacNhan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_XacNhan.setRadius(20);
        btn_XacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XacNhanActionPerformed(evt);
            }
        });

        btn_Thoat.setForeground(new java.awt.Color(255, 255, 255));
        btn_Thoat.setText("Thoát");
        btn_Thoat.setBorderColor(new java.awt.Color(255, 255, 255));
        btn_Thoat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_Thoat.setRadius(20);
        btn_Thoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_XacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150)
                .addComponent(btn_Thoat, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_XacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Thoat, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel2, jPanel3});

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel2, jPanel3});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chuyenBan(Ban ban1, Ban ban2, int soBan) {
        if (listBan1.isEmpty()) {

            // Chuyển bàn
            // Cập nhật số bàn cho hóa đơn
            hoaDon = HoaDon_DAO.layHoaDonCuaBanDangSuDung(ban1.getSoBan());
            hoaDon.setBan(ban2.getSoBan());
            HoaDon_DAO.sua(hoaDon);

            // Thay đổi trạng thái của 2 bàn
            Ban_DAO.thayDoiTrangThai(ban1);
            Ban_DAO.thayDoiTrangThai(ban2);

            JOptionPane.showMessageDialog(null, "Bàn " + ban1.getSoBan() + " đã chuyển sang bàn " + soBan + "!");
            Fr_BanHang.load_panelBan(Fr_BanHang.trangThaiBan);
        }
    }

    private void btn_XacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XacNhanActionPerformed
        int n = JOptionPane.showConfirmDialog(this, "Xác nhận tách bàn?", "Thông báo", JOptionPane.YES_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (n == JOptionPane.YES_OPTION) {
            if (listBan1.isEmpty()) {
                Ban ban = (Ban) cbo_Ban.getSelectedItem();

                chuyenBan(this.ban, ban, ban.getSoBan());

            } else if (listBan2.isEmpty()) {
                Ban ban = (Ban) cbo_Ban.getSelectedItem();

                chuyenBan(ban, this.ban, this.ban.getSoBan());

            } else if (hoaDon2.getMaHoaDon() != 0) {
                // Xóa chi tiết hóa đơn cũ
                ChiTietHoaDon_DAO.xoaTheoHoaDon(hoaDon2.getMaHoaDon());
                ChiTietHoaDon_DAO.xoaTheoHoaDon(hoaDon.getMaHoaDon());

                // Cập nhật chi tiết hóa đơn vừa thực hiện
                for (ChiTietHoaDon cthd : listBan1) {
                    ChiTietHoaDon_DAO.them(cthd);
                }
                for (ChiTietHoaDon cthd : listBan2) {
                    cthd.setMaHoaDon(hoaDon2.getMaHoaDon());
                    ChiTietHoaDon_DAO.them(cthd);
                }
                JOptionPane.showMessageDialog(null, "Cập nhật bàn thành công!");
            } else {
                // Tách ra bàn trống
                // Tạo hóa đơn mới
                hoaDon2 = new HoaDon(0,
                        Fr_Login.nhanVien.getMaNhanVien(),
                        ((Ban) cbo_Ban.getSelectedItem()).getSoBan(),
                        new Date(),
                        null,
                        1);

                try {
                    HoaDon_DAO.them(hoaDon2);
                } catch (SQLException ex) {
                    System.err.println(ex.getMessage());
                }

                // Xóa chi tiết hóa đơn cũ của bàn 1
                ChiTietHoaDon_DAO.xoaTheoHoaDon(hoaDon.getMaHoaDon());

                // Tạo lại chi tiết hóa đơn
                for (ChiTietHoaDon cthd : listBan1) {
                    ChiTietHoaDon_DAO.them(cthd);
                }
                for (ChiTietHoaDon cthd : listBan2) {
                    cthd.setMaHoaDon(hoaDon2.getMaHoaDon());
                    ChiTietHoaDon_DAO.them(cthd);
                }

                Ban_DAO.thayDoiTrangThai((Ban) cbo_Ban.getSelectedItem());

                Fr_BanHang.load_panelBan(Fr_BanHang.trangThaiBan);
                JOptionPane.showMessageDialog(null, "Tách bàn thành công!");

            }
            dispose();
        }
    }//GEN-LAST:event_btn_XacNhanActionPerformed

    private void btn_ThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThoatActionPerformed
        if (changed) {
            int n = JOptionPane.showConfirmDialog(null, "Dữ liệu có thay đổi, bạn chắc chắn muốn thoát?", "Dữ liệu thay đổi", JOptionPane.YES_OPTION);
            if (n == JOptionPane.YES_OPTION) {
                dispose();
            }
        } else {
            dispose();
        }
    }//GEN-LAST:event_btn_ThoatActionPerformed

    private enum ThaoTac {
        Left,
        LeftAll,
        Right,
        RightAll

    }

    private void chuyenSanPham(ThaoTac thaoTac) {
        boolean co = false;
        switch (thaoTac) {
            case Left -> {
                int row = tbl_Ban2.getSelectedRow();

                ChiTietHoaDon chiTietHoaDon = listBan2.get(row);
                for (int i = 0; i < listBan1.size(); i++) {
                    ChiTietHoaDon cthd = listBan1.get(i);

                    if (cthd.getMaSanPham() == chiTietHoaDon.getMaSanPham()) {
                        cthd.setSoLuong(cthd.getSoLuong() + 1);
                        listBan1.set(i, cthd);
                        co = true;
                    }
                }
                if (chiTietHoaDon.getSoLuong() - 1 > 0) {
                    chiTietHoaDon.setSoLuong(chiTietHoaDon.getSoLuong() - 1);
                    listBan2.set(row, chiTietHoaDon);
                } else {
                    listBan2.remove(row);
                }
                if (!co) {
                    listBan1.add(new ChiTietHoaDon(chiTietHoaDon.getMaHoaDon(), chiTietHoaDon.getMaSanPham(), 1, chiTietHoaDon.getTongTien()));
                }
            }
            case Right -> {
                int row = tbl_Ban1.getSelectedRow();

                ChiTietHoaDon chiTietHoaDon = listBan1.get(row);
                for (int i = 0; i < listBan2.size(); i++) {
                    ChiTietHoaDon cthd = listBan2.get(i);

                    if (cthd.getMaSanPham() == chiTietHoaDon.getMaSanPham()) {
                        cthd.setSoLuong(cthd.getSoLuong() + 1);
                        listBan2.set(i, cthd);
                        co = true;
                    }
                }
                if (chiTietHoaDon.getSoLuong() - 1 > 0) {
                    chiTietHoaDon.setSoLuong(chiTietHoaDon.getSoLuong() - 1);
                    listBan1.set(row, chiTietHoaDon);
                } else {
                    listBan1.remove(row);
                }
                if (!co) {
                    listBan2.add(new ChiTietHoaDon(chiTietHoaDon.getMaHoaDon(), chiTietHoaDon.getMaSanPham(), 1, chiTietHoaDon.getTongTien()));
                }
            }
            case RightAll -> {
                for (int i = 0; i < listBan1.size(); i++) {
                    ChiTietHoaDon cthd1 = listBan1.get(i);
                    // Nếu tồn tại --> Tăng số lượng
                    for (int j = 0; j < listBan2.size(); j++) {
                        ChiTietHoaDon cthd2 = listBan2.get(j);

                        if (cthd1.getMaSanPham() == cthd2.getMaSanPham()) {
                            int soLuong = cthd1.getSoLuong() + cthd2.getSoLuong();
                            cthd2.setSoLuong(soLuong);
                            listBan2.set(j, cthd2);

                            co = true;
                        }
                    }
                    // Chưa có --> Thêm vào bảng 2
                    if (!co) {
                        listBan2.add(cthd1);
                    }

                }
                // Xóa khỏi bảng 1
                listBan1.removeAll(listBan1);
            }
            case LeftAll -> {
                for (int i = 0; i < listBan2.size(); i++) {
                    ChiTietHoaDon cthd2 = listBan2.get(i);
                    // Nếu tồn tại --> Tăng số lượng
                    for (int j = 0; j < listBan1.size(); j++) {
                        ChiTietHoaDon cthd1 = listBan1.get(j);

                        if (cthd2.getMaSanPham() == cthd1.getMaSanPham()) {
                            int soLuong = cthd2.getSoLuong() + cthd1.getSoLuong();
                            cthd1.setSoLuong(soLuong);
                            listBan1.set(j, cthd1);
                            co = true;
                        }
                    }
                    // Chưa có --> Thêm vào bảng 1
                    if (!co) {
                        listBan1.add(cthd2);
                    }

                }
                // Xóa khỏi bảng 2
                listBan2.removeAll(listBan2);
            }

            default ->
                throw new AssertionError();
        }
        changed = true;

        load_Table(tbl_Ban1, listBan1);
        load_Table(tbl_Ban2, listBan2);

    }

    private void thongBaoRong(String soBan) {
        JOptionPane.showMessageDialog(null,
                "Bàn " + soBan + " không còn sản phẩm để chuyển",
                "Thông báo",
                JOptionPane.INFORMATION_MESSAGE);
    }

    private void btn_LeftAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LeftAllActionPerformed
        // TODO add your handling code here:
        boolean bangRong = tbl_Ban2.getRowCount() == 0;
        if (!bangRong) {
            chuyenSanPham(ThaoTac.LeftAll);
        } else {
            thongBaoRong(String.valueOf(((Ban) cbo_Ban.getSelectedItem()).getSoBan()));
        }

    }//GEN-LAST:event_btn_LeftAllActionPerformed

    private void btn_RightAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RightAllActionPerformed
        // TODO add your handling code here:
        boolean bangRong = tbl_Ban1.getRowCount() == 0;
        if (!bangRong) {
            chuyenSanPham(ThaoTac.RightAll);
        } else {
            thongBaoRong(txt_Ban.getText());
        }

    }//GEN-LAST:event_btn_RightAllActionPerformed

    private void chuyen1SanPham(JTable table, String soBan, ThaoTac thaoTac) {
        int row = table.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phẩm bên bàn " + soBan + " để chuyển!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        } else {
            chuyenSanPham(thaoTac);
        }
    }

    private void btn_RightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RightActionPerformed
        // TODO add your handling code here:
        chuyen1SanPham(tbl_Ban1, txt_Ban.getText(), ThaoTac.Right);
    }//GEN-LAST:event_btn_RightActionPerformed

    private void btn_LeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LeftActionPerformed
        // TODO add your handling code here:
        chuyen1SanPham(tbl_Ban2, String.valueOf(((Ban) cbo_Ban.getSelectedItem()).getSoBan()), ThaoTac.Left);
    }//GEN-LAST:event_btn_LeftActionPerformed

    private void cbo_BanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_BanActionPerformed
        // TODO add your handling code here:
        listBan1 = new ArrayList<>(listTam);
        load_Table(tbl_Ban1, listBan1);
        Ban ban = (Ban) cbo_Ban.getSelectedItem();
        if (ban.getTrangThai()) {
            hoaDon2 = HoaDon_DAO.layHoaDonCuaBanDangSuDung(ban.getSoBan());
            listBan2 = ChiTietHoaDon_DAO.layDanhSach(hoaDon2.getMaHoaDon());
            load_Table(tbl_Ban2, listBan2);
        } else {
            listBan2 = new ArrayList<>();
            hoaDon2 = new HoaDon();
            load_Table(tbl_Ban2, new ArrayList<>());
        }
    }//GEN-LAST:event_cbo_BanActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        btn_ThoatActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Left;
    private javax.swing.JButton btn_LeftAll;
    private javax.swing.JButton btn_Right;
    private javax.swing.JButton btn_RightAll;
    private Assets.Custom_Item.ButtonRound btn_Thoat;
    private Assets.Custom_Item.ButtonRound btn_XacNhan;
    private javax.swing.JComboBox<Ban> cbo_Ban;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbl_Ban1;
    private javax.swing.JTable tbl_Ban2;
    private javax.swing.JTextField txt_Ban;
    // End of variables declaration//GEN-END:variables
}
